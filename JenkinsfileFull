pipeline {
    agent any

    stages {
        stage('compile') {
            steps {
                sh '${DEBUG}; ./mvnw clean compile -e'
            }
        }
        stage('test'){
            steps {
                sh '${DEBUG}; ./mvnw clean test -e'
            }
        }
        stage('jar'){
            steps {
                sh '${DEBUG}; ./mvnw clean package -e'
            }
        }
        stage('sonar'){
            steps {
                withSonarQubeEnv('Sonar') {
                    tool name: 'sonarqube', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
                    def sonar = "${JENKINS_HOME}/tools/hudson.plugins.sonar.SonarRunnerInstallation/sonarqube/bin/sonar-scanner"
                    sh "${DEBUG}; ${sonar} -Dsonar.projectKey=${env.JOB_BASE_NAME}-${env.BRANCH_NAME} -Dsonar.java.binaries=build"
                }
                sleep 30
                timeout(time: 5, unit: 'MINUTES') {
                    def qg = waitForQualityGate()
                    if (qg.status != 'OK') {
                        error "Pipeline fallido debido a Quality Gate erroneo: ${qg.status}"
                    }
                }
            }
        }
        stage('dockerBuild'){
            steps {
                sh '${DEBUG}; /usr/local/bin/docker build -t devopsusach2020-0.0.1.jar -f Dockerfile .'
            }
        }
    }
}